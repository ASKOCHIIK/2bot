import telebot
from telebot import types
# —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç—Ç—É –∏–∑–¥–æ–æ @NavisPythonBot

bot = telebot.TeleBot('6825593973:AAHaO2DxvXxu957Mfh4a9ERJJZnQZfWEuNs')


@bot.message_handler(content_types=['text'])
def alika(lika):
    if (lika.text == "–ü—Ä–∏–≤–µ—Ç"):
        bot.send_message(lika.chat.id, text="–ü—Ä–∏–≤–µ–µ—Ç!!!)")

    elif (lika.text == "–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã‚ùì"):
        me = types.ReplyKeyboardMarkup(resize_keyboard=True)
        li1 = types.KeyboardButton("–ö—Ç–æ —è ?")
        li2 = types.KeyboardButton("—Ä–æ–±–æ—Ç –ª–∏ —è?")
        me.add(li1, li2)
        bot.send_message(lika.chat.id, text="–∫–∞–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã", reply_markup=me)

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    btn2 = types.KeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å‚ùì")
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id,
                     text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø –ø–æ–º–æ—à–Ω–∏–∫ –ú–µ–Ω—Ç–æ—Ä–æ–≤ –ø–æ Python".format(
                         message.from_user), reply_markup=markup)


@bot.message_handler(content_types=['text'])
def func(message):
    if (message.text == "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è"):
        bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ–µ—Ç.. –ó–∞ –ø–æ–º–æ—â—å—é –∫–æ –º–Ω–µ —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ!)")

    elif (message.text == "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å‚ùì"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ö—Ç–æ –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å ?")
        btn2 = types.KeyboardButton("–ß—Ç–æ —è –º–æ–≥—É?")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, back)
        bot.send_message(message.chat.id, text="–í—ã–±–∏—Ä–∞–π –≤–æ–ø—Ä–æ—Å", reply_markup=markup)

    elif (message.text == "–ö—Ç–æ –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å ?"):
        bot.send_message(message.chat.id, "–ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å\n–∏–º—è: –ê—Å–∫–∞—Ç –ö—É–ª–º–∞–Ω–æ–≤\n–¥–æ–ª–∂–Ω–æ—Å—Ç—å: –ú–µ–Ω—Ç–æ—Ä+(–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ PYTHON)\n—Å–æ—Ü —Å–µ—Ç–∏:\ninstagram:--> @askochiik\ntelegram: --> @askochiik")

    elif message.text == "–ß—Ç–æ —è –º–æ–≥—É?":
        bot.send_message(message.chat.id, text="–Ø –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å 3—Ö –º–µ—Å—è—á–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –ø–æ –∏–∑—É—á–µ–Ω–∏—é (PYTHON)")
        murkup_inline = types.InlineKeyboardMarkup()
        item_yes = types.InlineKeyboardButton(text='–ü–æ–∫–∞–∑–∞—Ç—å', callback_data='yes')
        item_no = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='no')
        murkup_inline.row(item_yes, item_no)
        bot.send_message(message.chat.id, text="–ü–æ–∫–∞–∑–∞—Ç—å –≤–∞–º —Å–ø–∏—Å–æ–∫ –∫—É—Ä—Å–∞?", reply_markup=murkup_inline)

        @bot.callback_query_handler(func=lambda call: True)
        def callback_inline(call):
            if call.data == 'yes':
                bot.send_message(call.message.chat.id, '–í—ã–±–∏—Ä–∞–π –∏–∑ —Ä—è–¥–∞ —Å–≤–æ–π –º–µ—Å—è—Ü')
                markup_inline = types.InlineKeyboardMarkup()

                # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—è—Ü–∞
                month1 = types.InlineKeyboardButton('1–º–µ—Å', callback_data='month1')
                month2 = types.InlineKeyboardButton('2–º–µ—Å', callback_data='month2')
                month3 = types.InlineKeyboardButton('3–º–µ—Å', callback_data='month3')

                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –º–µ—Å—è—Ü–µ–≤ –≤ —Ä–∞–∑–º–µ—Ç–∫—É
                markup_inline.row(month1, month2, month3)

                # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—è—Ü–∞
                buttons_month1 = [types.InlineKeyboardButton('list')]
                buttons_month1 = [types.InlineKeyboardButton('dict')]
                buttons_month1 = [types.InlineKeyboardButton('tuple')]
                buttons_month1 = [types.InlineKeyboardButton('')]
                buttons_month1 = [types.InlineKeyboardButton('list')]
                buttons_month1 = [types.InlineKeyboardButton('list')]






                buttons_month2 = [types.InlineKeyboardButton(f'–ö–Ω–æ–ø–∫–∞ {i + 1}', callback_data=f'month2_button{i + 1}')
                                  for i in range(5)]
                buttons_month3 = [types.InlineKeyboardButton(f'–ö–Ω–æ–ø–∫–∞ {i + 1}', callback_data=f'month3_button{i + 1}')
                                  for i in range(5)]

                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –º–µ—Å—è—Ü–µ–≤ –≤ —Ä–∞–∑–º–µ—Ç–∫—É
                markup_inline.row(*buttons_month1)
                markup_inline.row(*buttons_month2)
                markup_inline.row(*buttons_month3)

                bot.send_message(call.message.chat.id, '–°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–∞:', reply_markup=markup_inline)

                @bot.callback_query_handler(func=lambda call: call.data.startswith('month'))
                def handle_month_callback(call):
                    month = call.data[5:]  # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –º–µ—Å—è—Ü–∞ –∏–∑ callback-–¥–∞–Ω–Ω—ã—Ö

                    if month == '1':
                        buttons = [types.InlineKeyboardButton(f'–ö–Ω–æ–ø–∫–∞ {i + 1}', callback_data=f'month1_button{i + 1}')
                                   for i in range(5)]
                    elif month == '2':
                        buttons = [types.InlineKeyboardButton(f'–ö–Ω–æ–ø–∫–∞ {i + 1}', callback_data=f'month2_button{i + 1}')
                                   for i in range(5)]
                    elif month == '3':
                        buttons = [types.InlineKeyboardButton(f'–ö–Ω–æ–ø–∫–∞ {i + 1}', callback_data=f'month3_button{i + 1}')
                                   for i in range(5)]

                        markup_inline = types.InlineKeyboardMarkup()
                        markup_inline.row(*buttons)

                        bot.send_message(call.message.chat.id, f'–í—ã –≤—ã–±—Ä–∞–ª–∏ {month}!', reply_markup=markup_inline)

                # –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫—É—Ä—Å–∞
            elif call.data == 'no':
                bot.send_message(call.message.chat.id, '–•–æ—Ä–æ—à–æ, –Ω–µ –±—É–¥—É –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫—É—Ä—Å–∞.')



    elif (message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
        button2 = types.KeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å‚ùì")
        markup.add(button1, button2)
        bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–º–∞–Ω–¥—É —è –Ω–µ –æ—Ç–≤–µ—á–∞—é –ø—Ä–æ—Å—Ç–∏..\n –ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å –±—É–¥–µ—Ç —Ä—É–≥–∞—Ç—å)")

    @bot.message_handler()
    def user(message):
        if message.text == 'Bektur':
            bot.send_message(message.chat.id, 'Hi Bektur')
        elif message.text == 'Pic':
            photo = open('recent:///e58b87c4da76ed7963d8c163657acbfe', 'rb')
            bot.send_photo(message.chat.id, photo)


if __name__ == '__bot__':
    while True:
        try:
            bot.polling()
        except:
            print('–ß—Ç–æ—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞')

bot.polling(none_stop=True)
